<?php
// $Id: eb_comments.module,v 1 2011/03/23 Beschi Exp $
/**
 * Implementation of hook_menu().
 */
//function eb_comments_menu() {
//  $items = array();
//
//  //building the menu callbacks dynamically
//  //$commnet_ctypes = array('curriculum', 'asset', 'bead');
//  // Curruiculum removed from the array section to delete the left menu content.
//  $commnet_ctypes = array('asset', 'bead');
//  foreach ($commnet_ctypes as $type) {
//    if ($type == 'curriculum') {
//      if (variable_get('comment_' . $type, 0)) {
//        $com_types[] = $type;
//      }
//    }
//
//  }
//  if ($com_types) {
//    foreach ($com_types as $type) {
//      $type_url_str = str_replace('_', '-', $type);
//      $items[$type . '/%node/comments'] = array(
//        'title' => 'Comments',
//        'page callback' => 'view_comments_custom',
//        'page arguments' => array(1),
//        'access callback' => 'view_asset_curriculum_access',
//        'access arguments' => array(1),
//        'type' => MENU_LOCAL_TASK,
//         'weight' => -7,
//      );
//      $items[$type . '/%node/comments/reply'] = array(
//        'page callback' => 'comment_reply',
//        'page arguments' => array(1),
//        'access callback' => 'node_access',
//        'access arguments' => array('view', 1),
//        'type' => MENU_LOCAL_TASK,
//       'file' => '../../../../../modules/comment/comment.pages.inc',
//      );
//      $items[$type . '/%node/comments/edit/%'] = array(
//        'page callback' => 'comment_edit',
//        'page arguments' => array(4),
//        'access arguments' => array('post comments'),
//        'type' => MENU_LOCAL_TASK,
//       'file' => '../../../../../modules/comment/comment.pages.inc',
//      );
//    }
//  }
//
//  return $items;
//}

//for custom comments page
function view_comments_custom($node) {
  //check for comment settings in content type
  $ctype = arg(0);
  drupal_set_title($node->title);
  if ((variable_get('comment_' . $ctype, 0) && $node->field_turncommenting[0]['value'] == 1) || (variable_get('comment_' . $ctype, 0) && $node->type == "bead")) {
    drupal_add_js(drupal_get_path("module", "eb_comments") . "/comments-pager.js");
    global $user, $base_url;
    $i = 1;
    $limit = 10;
    $page_result = pager_query("SELECT node.nid AS nid,
      node.title AS node_title,
      comments.comment AS comments_comment,
      comments.format AS comments_format,
      comments.subject AS comments_subject,
      comments.cid AS comments_cid,
      comments.nid AS comments_nid,
      comments.name AS comments_name,
      comments.uid AS comments_uid,
      comments.homepage AS comments_homepage,
      users.picture AS users_picture,
      users.uid AS users_uid,
      users.name AS users_name,
      users.mail AS users_mail,
      comments.timestamp AS comment_timestamp
      FROM {node} node
      INNER JOIN {comments} comments ON node.nid = comments.nid
      INNER JOIN {users} users ON node.uid = users.uid
      WHERE (node.status <> 0) AND (node.type in ('%s'))  AND (node.nid = %d)
      ORDER BY comment_timestamp DESC", $limit, 0, NULL, $ctype, arg(1));

    if (db_affected_rows()) {
      while ($obj = db_fetch_object($page_result)) {
        $output['fields'][$i]['title'] = truncate_utf8($obj->comments_subject, 40, $wordsafe = FALSE, $dots = TRUE);
        $output['fields'][$i]['body'] = truncate_utf8($obj->comments_comment, 300, $wordsafe = TRUE, $dots = FALSE);
        $userpicture = theme('imagecache', 'dis_rev_com_image2', $obj->users_picture);
        $output['fields'][$i]['user_picture'] = l($userpicture, "user/" . $obj->users_uid, array('html' => TRUE));
        if ($user->uid == $obj->comments_uid ) {
          $output['fields'][$i]['edit_comment'] = l("<img src='" . $base_url . '/' . drupal_get_path('theme', 'edubridge_fluid') . "/images/edit_icon.png' />",  $ctype . "/" . arg(1) . "/comments/edit/" . $obj->comments_cid, array('html' => TRUE));
        }
        $i++;
      }
    }
    else {
      if (variable_get('comment_' . $ctype, 0) == 2) {
        //If comment write mode is on
        $output['no_comment_content'] = t("There are no comments, use the Add New Comment option to add comments.");
      }
      else {
        //If only view mode
        $output['no_comment_content'] = t("There are no comments.");
      }
    }
  }
  else {
    $output['no_comment_content'] = t(ucwords($ctype) . ", {$node->title} is not open for comments.");
  }

  $output['pager'] = theme('pager', NULL, $limit, 0);
  $results = theme('view_comments_custom', $output);
  return $results;
}

// hook_theme()
function eb_comments_theme() {
  return array(
    'view_comments_custom' => array(
      'template' => 'custom-comments',
      'arguments' => array('results' => NULL),
    ),
  );
}



/**
 * hook_form_alter() implementation
 * Adding an option to display comment form location on top.
 * Adding an other option to display the user image in comments list.
 */
function eb_comments_form_alter(&$form, &$form_state, $form_id) {
  global $user;

  switch ($form_id) {
    case 'comment_form':
      // After removal url of asset, curriculum this should be remove
      $query = db_result(db_query("SELECT nid FROM comments WHERE cid=%d", arg(2)));
      if (!$query) {

        // Added if condition to redirect to the same page after inserting comments
        $type = db_result(db_query("SELECT type FROM {node} WHERE nid=%d", arg(1)));
        if($type == 'asset' || $type == 'bead' || $type == 'curriculum') {
          $redirect = 'node/' . arg(1);
        }
        //elseif (arg(2) == 'discussions') {
        //  $redirect = 'node/' . arg(3);
        //}
        else {
          $redirect = 'node/' . arg(1);
        }
        // Comment form redirection Method
        $form['submission_path'] = array(
          '#type' => 'hidden',
          '#default_value' => $redirect,
          '#weight' => -100,
        );
        $form['#redirect'] = array($form['#parameters'][1]['post']['submission_path']);
      }
      break;
  }
}
