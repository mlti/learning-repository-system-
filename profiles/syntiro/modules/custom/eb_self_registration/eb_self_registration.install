<?php

/**
 * @file
 * Install, update, and uninstall functions for the userpoints_login menu module.
 */

/**
 * Implementation of hook_install().
 */
function eb_self_registration_install() {
  drupal_install_schema('eb_self_registration');
  // Check if there is an existing 'admin' named role. If so, do not add a new
  // administrator role.
  $rid = db_result(db_query("SELECT rid FROM {role} WHERE name = 'New register'"));
  if (!$rid) {
    db_query("INSERT INTO {role} (name) VALUES ('%s')", 'New register');
    $rid = db_last_insert_id('role', 'rid');
    drupal_set_message(t('A new user role of <em>New register</em> has been added.'));
  }
}

/**
 * Implementation of hook_uninstall().
 */
function eb_self_registration_uninstall() {
  drupal_uninstall_schema('eb_self_registration');
}

/**
 * Implementation of hook_schema().
 */
function eb_self_registration_schema() {
  $schema = array();
  $schema['eb_self_registration'] = array(
    'description' => 'Records userpoints flood',
    'fields' => array(
        'id' => array(
        'description' => t('Primary Key: serial No'),
        'type'        => 'serial',
        'not null'    => TRUE
      ), 
      'first_name' => array(
        'type' => 'varchar',
        'length' => 60,
        'not null' => TRUE,
        'default' => '',
        'description' => 'first name.',
      ),
      'last_name' => array(
        'type' => 'varchar',
        'length' => 60,
        'not null' => TRUE,
        'default' => '',
        'description' => 'last name.',
      ),
      'rid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'default' => NULL,
        'not null' => TRUE,
      ),
      'mail' => array(
        'type' => 'varchar',
        'length' => 64,
        'not null' => FALSE,
        'default' => '',
        'description' => "User's email address.",
      ),
      'notes' => array(
        'description' => 'The body of this version.',
        'type' => 'text',
        'not null' => FALSE,
        'size' => 'big'
      ),
      'msg' => array(
        'description' => 'Message.',
        'type' => 'text',
        'not null' => FALSE,
        'size' => 'big'
      ),
      'status' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'size' => 'tiny',
        'description' => 'Whether rule is to allow(1) or deny(0) access.',
      ),
     'timestamp' => array(
       'type' => 'int',
       'default' => NULL,
       'not null' => TRUE,
     ),
    ),
    'primary key' => array('id'),
  ); 
  return $schema;
}
